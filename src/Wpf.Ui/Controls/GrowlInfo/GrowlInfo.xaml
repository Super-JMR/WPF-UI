<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:controls="clr-namespace:Wpf.Ui.Controls"
    xmlns:converters="clr-namespace:Wpf.Ui.Converters">
    
    <Thickness x:Key="GrowlInfoPadding">14,8,14,8</Thickness>
    <Thickness x:Key="GrowlInfoMargin">14,4,14,4</Thickness>
    <Thickness x:Key="GrowlInfoBorderThemeThickness">1</Thickness>

    <Style TargetType="{x:Type controls:GrowlInfo}">
        <Setter Property="Width" Value="400"/>
        <Setter Property="MinHeight" Value="100"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource InfoBarTitleForeground}" />
        <Setter Property="Padding" Value="{StaticResource GrowlInfoPadding}" />
        <Setter Property="Margin" Value="{StaticResource GrowlInfoMargin}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBarBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource InfoBarBorderThemeThickness}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type controls:GrowlInfo}">
                    <ControlTemplate.Resources>
                        <converters:AnimationFactorToValueConverter x:Key="AnimationFactorToValueConverter" />
                    </ControlTemplate.Resources>

                    <Border 
                    x:Name="ContentBorder"
                    Width="{TemplateBinding Width}" 
                    MinHeight="{TemplateBinding MinHeight}"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Border.Tag>
                            <system:Double>0.0</system:Double>
                        </Border.Tag>

                        <Border.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource AnimationFactorToValueConverter}" ConverterParameter="_negative">
                                        <Binding ElementName="ContentBorder" Path="ActualWidth" />
                                        <Binding ElementName="ContentBorder" Path="Tag" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </Border.RenderTransform>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <!--icon-->
                                <controls:SymbolIcon x:Name="SymbolIcon" Symbol="Info28" VerticalAlignment="Top" Filled="True" FontSize="42"/>
                                <!--title、message and NowTime-->
                                <Grid Grid.Column="1" Margin="10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <!--title-->
                                    <!--<TextBlock Grid.Row="0" Text="Info" TextElement.FontWeight="SemiBold" TextElement.FontSize="{DynamicResource ControlContentThemeFontSize}"/>-->
                                    <TextBlock x:Name="TitleTextBlock" Grid.Row="0" Text="{TemplateBinding Title}"
                                           TextElement.FontWeight="SemiBold" 
                                           TextElement.FontSize="{TemplateBinding FontSize}"/>
                                    <!--massage-->
                                    <TextBlock Grid.Row="1" Margin="0,5,10,0" VerticalAlignment="Top" TextWrapping="Wrap" Text="{TemplateBinding Message}"/>
                                    <!--<ScrollViewer Grid.Row="1" Margin="0,5" VerticalScrollBarVisibility="Auto">
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Top" TextWrapping="Wrap" Text="{TemplateBinding Message}"/>
                                </ScrollViewer>-->
                                    <!--NowTime-->
                                    <TextBlock x:Name="NowDateTimeTextBlock" Grid.Row="2" Foreground="{DynamicResource TextFillColorDisabledBrush}" Text="{TemplateBinding NowDateTime}"/>
                                </Grid>
                                <!--closeButton-->
                                <Button Grid.Column="2" x:Name="CloseButton" Padding="5" Visibility="Hidden" Command="{Binding TemplateCloseButtonCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <controls:SymbolIcon Symbol="Dismiss24" VerticalAlignment="Center" Filled="True"/>
                                </Button>
                            </Grid>
                            <!--Confirm Button-->
                            <Grid Grid.Row="1" Margin="0,5,0,0" x:Name="InquiryGrid" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,3,0"
                                    Command="{Binding TemplateCancelButtonCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{TemplateBinding CancelButtonText}"/>
                                <Button Grid.Column="1" HorizontalAlignment="Stretch" Margin="3,0,0,0"
                                    Command="{Binding TemplateConfirmButtonCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{TemplateBinding ConfirmButtonText}"/>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(Border.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Tag">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1.0" />
                                            <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0" KeyTime="0:0:0.333" Value="0.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(Border.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Tag">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.0" />
                                            <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0" KeyTime="0:0:0.167" Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsShowTitle" Value="True">
                            <Setter TargetName="TitleTextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsShowNowDateTime" Value="True">
                            <Setter TargetName="NowDateTimeTextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="Severity" Value="Informational">
                            <Setter TargetName="SymbolIcon" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="Info28" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource InfoBarInformationalSeverityBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="Severity" Value="Success">
                            <Setter TargetName="SymbolIcon" Property="Foreground" Value="{DynamicResource InfoBarSuccessSeverityIconBackground}" />
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="CheckmarkCircle32" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource InfoBarSuccessSeverityBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="Severity" Value="Warning">
                            <Setter TargetName="SymbolIcon" Property="Foreground" Value="{DynamicResource InfoBarWarningSeverityIconBackground}" />
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="ErrorCircle24" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource InfoBarWarningSeverityBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="Severity" Value="Error">
                            <Setter TargetName="SymbolIcon" Property="Foreground" Value="{DynamicResource InfoBarErrorSeverityIconBackground}" />
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="DismissCircle32" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource InfoBarErrorSeverityBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="Severity" Value="Inquiry">
                            <Setter TargetName="SymbolIcon" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource SystemAccentColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="SymbolIcon" Property="Symbol" Value="ShieldQuestion32" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource InfoBarInformationalSeverityBackgroundBrush}" />
                            <Setter TargetName="InquiryGrid" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>